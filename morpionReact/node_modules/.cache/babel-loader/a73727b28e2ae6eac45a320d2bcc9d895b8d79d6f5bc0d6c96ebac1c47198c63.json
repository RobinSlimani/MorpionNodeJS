{"ast":null,"code":"var _jsxFileName = \"/home/robin/Documents/archi_logi/MorpionNodeJS/morpionReact/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (squares.winner || squares.history[squares.currentMove][i]) {\n      return;\n    }\n    onPlay(i);\n  }\n  const winner = squares.winner;\n  const status = winner ? 'Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : 'O');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squares.history[squares.currentMove].slice(0, 3).map((value, index) => /*#__PURE__*/_jsxDEV(Square, {\n        value: value,\n        onSquareClick: () => handleClick(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squares.history[squares.currentMove].slice(3, 6).map((value, index) => /*#__PURE__*/_jsxDEV(Square, {\n        value: value,\n        onSquareClick: () => handleClick(index + 3)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squares.history[squares.currentMove].slice(6, 9).map((value, index) => /*#__PURE__*/_jsxDEV(Square, {\n        value: value,\n        onSquareClick: () => handleClick(index + 6)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [gameState, setGameState] = useState({\n    history: [Array(9).fill(null)],\n    currentMove: 0,\n    winner: null\n  });\n  const [gamesPlayed, setGamesPlayed] = useState(0);\n  useEffect(() => {\n    fetch('/api').then(response => response.json()).then(data => setGameState(data)).catch(error => console.error('Error fetching game state:', error));\n    fetch('/api/games').then(response => response.json()).then(data => setGamesPlayed(data.gamesPlayed)).catch(error => console.error('Error fetching games played:', error));\n  }, []);\n  useEffect(() => {\n    if (gameState.winner) {\n      fetch('/api/games').then(response => response.json()).then(data => setGamesPlayed(data.gamesPlayed)).catch(error => console.error('Error fetching games played:', error));\n    }\n  }, [gameState.winner]);\n  function handlePlay(squareIndex) {\n    const currentSquares = gameState.history[gameState.currentMove];\n    if (currentSquares[squareIndex] || gameState.winner) {\n      return;\n    }\n    const newSquares = currentSquares.slice();\n    newSquares[squareIndex] = gameState.currentMove % 2 === 0 ? 'X' : 'O';\n    fetch('/api/game', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        currentMove: gameState.currentMove,\n        squares: newSquares\n      })\n    }).then(response => response.json()).then(data => setGameState(data)).catch(error => console.error('Error updating game state:', error));\n  }\n  function jumpTo(move) {\n    fetch('/api/game/jump', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        move\n      })\n    }).then(response => response.json()).then(data => setGameState(data)).catch(error => console.error('Error jumping to move:', error));\n  }\n  function resetGame() {\n    fetch('/api/game/reset', {\n      method: 'POST'\n    }).then(response => response.json()).then(data => setGameState(data)).catch(error => console.error('Error resetting game state:', error));\n  }\n  const moves = gameState.history.map((squares, move) => {\n    const description = move ? 'Go to move #' + move : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  });\n  const xIsNext = gameState.currentMove % 2 === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: gameState,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Games played: \", gamesPlayed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), gameState.winner && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"bZk1cnYRnIs6LyoQCZuox/Fl5YA=\");\n_c3 = Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","handleClick","i","winner","history","currentMove","status","slice","map","index","_c2","Game","_s","gameState","setGameState","Array","fill","gamesPlayed","setGamesPlayed","fetch","then","response","json","data","catch","error","console","handlePlay","squareIndex","currentSquares","newSquares","method","headers","body","JSON","stringify","jumpTo","move","resetGame","moves","description","_c3","$RefreshReg$"],"sources":["/home/robin/Documents/archi_logi/MorpionNodeJS/morpionReact/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  function handleClick(i) {\n    if (squares.winner || squares.history[squares.currentMove][i]) {\n      return;\n    }\n    onPlay(i);\n  }\n\n  const winner = squares.winner;\n  const status = winner ? 'Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : 'O');\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {squares.history[squares.currentMove].slice(0, 3).map((value, index) => (\n          <Square key={index} value={value} onSquareClick={() => handleClick(index)} />\n        ))}\n      </div>\n      <div className=\"board-row\">\n        {squares.history[squares.currentMove].slice(3, 6).map((value, index) => (\n          <Square key={index} value={value} onSquareClick={() => handleClick(index + 3)} />\n        ))}\n      </div>\n      <div className=\"board-row\">\n        {squares.history[squares.currentMove].slice(6, 9).map((value, index) => (\n          <Square key={index} value={value} onSquareClick={() => handleClick(index + 6)} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default function Game() {\n  const [gameState, setGameState] = useState({\n    history: [Array(9).fill(null)],\n    currentMove: 0,\n    winner: null,\n  });\n  const [gamesPlayed, setGamesPlayed] = useState(0);\n\n  useEffect(() => {\n    fetch('/api')\n      .then(response => response.json())\n      .then(data => setGameState(data))\n      .catch(error => console.error('Error fetching game state:', error));\n\n    fetch('/api/games')\n      .then(response => response.json())\n      .then(data => setGamesPlayed(data.gamesPlayed))\n      .catch(error => console.error('Error fetching games played:', error));\n  }, []);\n\n  useEffect(() => {\n    if (gameState.winner) {\n      fetch('/api/games')\n        .then(response => response.json())\n        .then(data => setGamesPlayed(data.gamesPlayed))\n        .catch(error => console.error('Error fetching games played:', error));\n    }\n  }, [gameState.winner]);\n\n  function handlePlay(squareIndex) {\n    const currentSquares = gameState.history[gameState.currentMove];\n    if (currentSquares[squareIndex] || gameState.winner) {\n      return;\n    }\n\n    const newSquares = currentSquares.slice();\n    newSquares[squareIndex] = gameState.currentMove % 2 === 0 ? 'X' : 'O';\n\n    fetch('/api/game', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ currentMove: gameState.currentMove, squares: newSquares }),\n    })\n      .then(response => response.json())\n      .then(data => setGameState(data))\n      .catch(error => console.error('Error updating game state:', error));\n  }\n\n  function jumpTo(move) {\n    fetch('/api/game/jump', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ move }),\n    })\n      .then(response => response.json())\n      .then(data => setGameState(data))\n      .catch(error => console.error('Error jumping to move:', error));\n  }\n\n  function resetGame() {\n    fetch('/api/game/reset', {\n      method: 'POST',\n    })\n      .then(response => response.json())\n      .then(data => setGameState(data))\n      .catch(error => console.error('Error resetting game state:', error));\n  }\n\n  const moves = gameState.history.map((squares, move) => {\n    const description = move ? 'Go to move #' + move : 'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  const xIsNext = gameState.currentMove % 2 === 0;\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={gameState} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <div>Games played: {gamesPlayed}</div>\n        <ol>{moves}</ol>\n        {gameState.winner && <button onClick={resetGame}>New Game</button>}\n      </div>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}